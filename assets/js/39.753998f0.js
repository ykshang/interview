(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{492:function(t,s,a){"use strict";a.r(s);var r=a(3),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"判断对象相等"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断对象相等"}},[t._v("#")]),t._v(" 判断对象相等")]),t._v(" "),s("h2",{attrs:{id:"浅比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浅比较"}},[t._v("#")]),t._v(" 浅比较")]),t._v(" "),s("p",[t._v("浅比较指的是比较二者的引用是否同一个，利用 "),s("code",[t._v("==")]),t._v("和"),s("code",[t._v("===")])]),t._v(" "),s("h2",{attrs:{id:"深比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深比较"}},[t._v("#")]),t._v(" 深比较")]),t._v(" "),s("p",[t._v("深比较就是比较二者的所有属性和属性值完全相等，但是存在一些情况比如函数（闭包）和正则表达式是无法比较的。")]),t._v(" "),s("p",[t._v("深拷贝可以用 "),s("strong",[t._v("自定义递归函数")]),t._v(" 或者 "),s("strong",[t._v("JSON.stringfiy()")]),t._v(" 转成字符串去比较。")])])}),[],!1,null,null,null);s.default=e.exports}}]);