(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{518:function(_,v,t){"use strict";t.r(v);var r=t(3),s=Object(r.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"浏览器中输入url到页面显示的全过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器中输入url到页面显示的全过程"}},[_._v("#")]),_._v(" 浏览器中输入URL到页面显示的全过程")]),_._v(" "),v("h2",{attrs:{id:"_1-用户输入url"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-用户输入url"}},[_._v("#")]),_._v(" 1. 用户输入URL")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("地址栏输入：")]),_._v(" 用户在浏览器的地址栏中输入一个URL（如https://www.example.com）并按下回车键。")]),_._v(" "),v("li",[v("strong",[_._v("自动补全：")]),_._v(" 浏览器可能会根据历史记录、书签等信息自动补全URL。")])]),_._v(" "),v("h2",{attrs:{id:"_2-url解析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-url解析"}},[_._v("#")]),_._v(" 2. URL解析")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("协议解析：")]),_._v(" 浏览器解析URL中的协议部分（如https），确定使用的协议。")]),_._v(" "),v("li",[v("strong",[_._v("域名解析：")]),_._v(" 浏览器解析URL中的域名部分（如www.example.com）。")]),_._v(" "),v("li",[v("strong",[_._v("路径解析：")]),_._v(" 浏览器解析URL中的路径部分（如/path/to/resource）。")]),_._v(" "),v("li",[v("strong",[_._v("查询参数解析：")]),_._v(" 浏览器解析URL中的查询参数部分（如?query=param）。")]),_._v(" "),v("li",[v("strong",[_._v("片段标识符解析：")]),_._v(" 浏览器解析URL中的片段标识符部分（如#section）。")])]),_._v(" "),v("h2",{attrs:{id:"_3-dns解析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-dns解析"}},[_._v("#")]),_._v(" 3. DNS解析")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("缓存检查：")]),_._v(" 浏览器首先检查本地DNS缓存中是否有该域名的IP地址。")]),_._v(" "),v("li",[v("strong",[_._v("操作系统缓存检查：")]),_._v(" 如果本地缓存中没有，浏览器会向操作系统请求。")]),_._v(" "),v("li",[v("strong",[_._v("DNS服务器查询：")]),_._v(" 操作系统会检查自己的缓存，如果没有，则会向配置的DNS服务器发送请求。")]),_._v(" "),v("li",[v("strong",[_._v("递归查询：")]),_._v(" DNS服务器可能会进行递归查询，最终返回域名对应的IP地址。")]),_._v(" "),v("li",[v("strong",[_._v("返回IP地址：")]),_._v(" DNS解析完成后，返回域名对应的IP地址（如93.184.216.34）。")])]),_._v(" "),v("h2",{attrs:{id:"_4-建立tcp连接"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-建立tcp连接"}},[_._v("#")]),_._v(" 4. 建立TCP连接")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("三次握手：")]),_._v(" 浏览器使用传输控制协议（TCP）与服务器建立连接。这个过程称为三次握手：\n"),v("ul",[v("li",[v("strong",[_._v("SYN：")]),_._v(" 浏览器发送一个SYN（同步）包到服务器，表示请求建立连接。")]),_._v(" "),v("li",[v("strong",[_._v("SYN-ACK：")]),_._v(" 服务器回应一个SYN-ACK（同步-确认）包，表示同意建立连接。")]),_._v(" "),v("li",[v("strong",[_._v("ACK：")]),_._v(" 浏览器发送一个ACK（确认）包，连接建立。")])])])]),_._v(" "),v("h2",{attrs:{id:"_5-tls握手-如果使用https"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-tls握手-如果使用https"}},[_._v("#")]),_._v(" 5. TLS握手（如果使用HTTPS）")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("客户端问候：")]),_._v(" 浏览器发送一个ClientHello消息，包含支持的加密算法、TLS版本等信息。")]),_._v(" "),v("li",[v("strong",[_._v("服务器问候：")]),_._v(" 服务器回应一个ServerHello消息，选择加密算法和TLS版本，并发送服务器证书。")]),_._v(" "),v("li",[v("strong",[_._v("证书验证：")]),_._v(" 浏览器验证服务器证书的有效性和可信度。")]),_._v(" "),v("li",[v("strong",[_._v("密钥交换：")]),_._v(" 浏览器和服务器交换密钥，生成会话密钥。")]),_._v(" "),v("li",[v("strong",[_._v("完成握手：")]),_._v(" 双方使用会话密钥加密通信，完成TLS握手。")])]),_._v(" "),v("h2",{attrs:{id:"_6-发送http请求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-发送http请求"}},[_._v("#")]),_._v(" 6. 发送HTTP请求")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("请求构建：")]),_._v(" 浏览器构建一个HTTP请求，包含请求方法（如GET、POST）、请求头（如User-Agent、Accept）等信息。")]),_._v(" "),v("li",[v("strong",[_._v("发送请求：")]),_._v(" 浏览器通过建立的TCP连接将HTTP请求发送到服务器。")])]),_._v(" "),v("h2",{attrs:{id:"_7-服务器处理请求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-服务器处理请求"}},[_._v("#")]),_._v(" 7. 服务器处理请求")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("请求接收：")]),_._v(" 服务器接收到HTTP请求后，解析请求头和请求体。")]),_._v(" "),v("li",[v("strong",[_._v("路由处理：")]),_._v(" 服务器根据请求的URL路径和方法，将请求路由到相应的处理程序。")]),_._v(" "),v("li",[v("strong",[_._v("生成响应：")]),_._v(" 处理程序生成响应内容，通常包括HTML、CSS、JavaScript等资源。")]),_._v(" "),v("li",[v("strong",[_._v("发送响应：")]),_._v(" 服务器将生成的HTTP响应发送回浏览器。")])]),_._v(" "),v("h2",{attrs:{id:"_8-浏览器接收响应"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-浏览器接收响应"}},[_._v("#")]),_._v(" 8. 浏览器接收响应")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("响应解析：")]),_._v(" 浏览器接收到HTTP响应后，解析响应头和响应体。")]),_._v(" "),v("li",[v("strong",[_._v("状态码检查：")]),_._v(" 浏览器检查HTTP状态码（如200、404、500）以确定请求是否成功。")]),_._v(" "),v("li",[v("strong",[_._v("重定向处理：")]),_._v(" 如果状态码是3xx，浏览器会根据响应头中的Location字段发起新的请求。")])]),_._v(" "),v("h2",{attrs:{id:"_9-渲染页面"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-渲染页面"}},[_._v("#")]),_._v(" 9. 渲染页面")]),_._v(" "),v("ul",[v("li",[v("p",[v("strong",[_._v("HTML解析：")]),_._v(" 浏览器开始解析HTML文档，构建DOM（文档对象模型）树。")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("Tokenization：")]),_._v(" 将HTML内容分解成一系列的Token。")]),_._v(" "),v("li",[v("strong",[_._v("Tree Construction：")]),_._v(" 将Token转换成DOM节点，并构建DOM树。")])])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("CSS解析：")]),_._v(" 浏览器解析CSS文件，构建CSSOM（CSS对象模型）树。")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("CSS Tokenization：")]),_._v(" 将CSS内容分解成一系列的Token。")]),_._v(" "),v("li",[v("strong",[_._v("CSS Parsing：")]),_._v(" 将Token转换成CSS规则，并构建CSSOM树。")])])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("JavaScript执行：")]),_._v(" 浏览器执行JavaScript代码，可能会修改DOM和CSSOM。")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("下载和解析：")]),_._v(" 下载并解析JavaScript文件。")]),_._v(" "),v("li",[v("strong",[_._v("执行：")]),_._v(" 执行JavaScript代码，可能会操作DOM和CSSOM。")])])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("渲染树构建：")]),_._v(" 浏览器将DOM和CSSOM合并成渲染树。")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("Render Tree Construction：")]),_._v(" 将DOM和CSSOM合并，生成渲染树。")])])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("布局计算：")]),_._v(" 浏览器计算每个元素的布局信息（位置和大小）。")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("Layout：")]),_._v(" 计算每个节点的几何信息（位置和大小）。")])])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("绘制：")]),_._v(" 浏览器将渲染树的内容绘制到屏幕上。")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("Paint：")]),_._v(" 将每个节点绘制到屏幕上。")])])])]),_._v(" "),v("h2",{attrs:{id:"_10-资源加载"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_10-资源加载"}},[_._v("#")]),_._v(" 10. 资源加载")]),_._v(" "),v("ul",[v("li",[v("p",[v("strong",[_._v("并行加载：")]),_._v(" 浏览器会并行加载HTML中引用的资源（如CSS、JavaScript、图片）。")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("Preload：")]),_._v(" 解析并应用CSS文件。")]),_._v(" "),v("li",[v("strong",[_._v("Preload：")]),_._v(" 下载并执行JavaScript文件。")]),_._v(" "),v("li",[v("strong",[_._v("图片：")]),_._v(" 下载并显示图片。")])])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("阻塞与非阻塞：")]),_._v(" CSS和JavaScript可能会阻塞渲染，浏览器会根据资源的优先级进行加载和执行。")])])]),_._v(" "),v("h2",{attrs:{id:"_11-交互处理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_11-交互处理"}},[_._v("#")]),_._v(" 11. 交互处理")]),_._v(" "),v("ul",[v("li",[v("p",[v("strong",[_._v("事件绑定：")]),_._v(" 浏览器为页面元素绑定事件处理程序。")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("Event Listeners：")]),_._v(" 为DOM元素绑定事件监听器。")])])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("用户交互：")]),_._v(" 用户可以与页面进行交互，浏览器会响应用户的操作（如点击、输入）。")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("HTML解析")]),_._v("： 处理用户事件（如点击、输入）。")]),_._v(" "),v("li",[v("strong",[_._v("DOM Updates：")]),_._v(" 根据用户操作更新DOM。")])])])]),_._v(" "),v("h2",{attrs:{id:"_12-持续优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_12-持续优化"}},[_._v("#")]),_._v(" 12. 持续优化")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("缓存：")]),_._v(" 浏览器会缓存静态资源，以便下次请求时加快加载速度。\n"),v("ul",[v("li",[v("strong",[_._v("HTTP Cache")]),_._v("： 缓存HTTP响应，以减少重复请求。")])])]),_._v(" "),v("li",[v("strong",[_._v("预加载与预取：")]),_._v(" 浏览器可能会预加载或预取资源，以优化用户体验。\n"),v("ul",[v("li",[v("strong",[_._v("Preload")]),_._v("： 提前加载关键资源。")]),_._v(" "),v("li",[v("strong",[_._v("Prefetch：")]),_._v(" 提前加载可能需要的资源。")])])])])])}),[],!1,null,null,null);v.default=s.exports}}]);