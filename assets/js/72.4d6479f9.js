(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{526:function(v,_,r){"use strict";r.r(_);var t=r(3),a=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"graphql"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#graphql"}},[v._v("#")]),v._v(" GraphQL")]),v._v(" "),_("p",[v._v("GraphQL是一种用于API开发的查询语言和运行时环境。它与传统的REST API有几个重要的区别。")]),v._v(" "),_("p",[v._v("首先，"),_("strong",[_("code",[v._v("GraphQL")]),v._v("允许客户端精确地指定需要返回的数据，并且从服务端获取多个资源的不同字段")]),v._v("。这避免了在REST中出现的过度获取或不足获取数据的问题，提高了数据传输的效率。")]),v._v(" "),_("p",[v._v("其次，"),_("strong",[_("code",[v._v("GraphQL")]),v._v("使用单一端点进行数据查询和修改")]),v._v("。这意味着客户端可以通过一个请求来获取多个资源，并且不需要进行多次请求。相比之下，REST API通常需要多次请求才能获取到所有需要的数据。")]),v._v(" "),_("p",[v._v("另外，"),_("strong",[_("code",[v._v("GraphQL")]),v._v("提供了强大的类型系统，定义了可用字段和操作的明确规范")]),v._v("。客户端可以通过查询或变异来精确地操作数据，并在编译时进行类型检查。")]),v._v(" "),_("p",[v._v("此外，"),_("strong",[_("code",[v._v("GraphQL")]),v._v("还支持实时数据推送和订阅功能，让客户端能够与服务端进行实时的双向通信")]),v._v("。")]),v._v(" "),_("p",[v._v("总体来说，"),_("code",[v._v("GraphQL")]),v._v("提供了更灵活、精确和高效的数据获取和操作方式，更好地满足了现代应用程序对数据的需求。")])])}),[],!1,null,null,null);_.default=a.exports}}]);